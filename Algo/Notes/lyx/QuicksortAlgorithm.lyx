#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{fancyvrb}
\usepackage{color}
\def\PY@reset{\let\PY@it=\relax \let\PY@bf=\relax%
    \let\PY@ul=\relax \let\PY@tc=\relax%
    \let\PY@bc=\relax \let\PY@ff=\relax}
\def\PY@tok#1{\csname PY@tok@#1\endcsname}
\def\PY@toks#1+{\ifx\relax#1\empty\else%
    \PY@tok{#1}\expandafter\PY@toks\fi}
\def\PY@do#1{\PY@bc{\PY@tc{\PY@ul{%
    \PY@it{\PY@bf{\PY@ff{#1}}}}}}}
\def\PY#1#2{\PY@reset\PY@toks#1+\relax+\PY@do{#2}}

\expandafter\def\csname PY@tok@gd\endcsname{\def\PY@tc##1{\textcolor[rgb]{0.63,0.00,0.00}{##1}}}
\expandafter\def\csname PY@tok@gu\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.50,0.00,0.50}{##1}}}
\expandafter\def\csname PY@tok@gt\endcsname{\def\PY@tc##1{\textcolor[rgb]{0.00,0.25,0.82}{##1}}}
\expandafter\def\csname PY@tok@gs\endcsname{\let\PY@bf=\textbf}
\expandafter\def\csname PY@tok@gr\endcsname{\def\PY@tc##1{\textcolor[rgb]{1.00,0.00,0.00}{##1}}}
\expandafter\def\csname PY@tok@cm\endcsname{\def\PY@tc##1{\textcolor[rgb]{0.50,0.50,0.50}{##1}}}
\expandafter\def\csname PY@tok@vg\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.82,0.44,0.00}{##1}}}
\expandafter\def\csname PY@tok@m\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.38,0.00,0.88}{##1}}}
\expandafter\def\csname PY@tok@mh\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.00,0.31,0.50}{##1}}}
\expandafter\def\csname PY@tok@cs\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.80,0.00,0.00}{##1}}}
\expandafter\def\csname PY@tok@ge\endcsname{\let\PY@it=\textit}
\expandafter\def\csname PY@tok@vc\endcsname{\def\PY@tc##1{\textcolor[rgb]{0.19,0.38,0.56}{##1}}}
\expandafter\def\csname PY@tok@il\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.00,0.00,0.82}{##1}}}
\expandafter\def\csname PY@tok@go\endcsname{\def\PY@tc##1{\textcolor[rgb]{0.50,0.50,0.50}{##1}}}
\expandafter\def\csname PY@tok@cp\endcsname{\def\PY@tc##1{\textcolor[rgb]{0.31,0.44,0.56}{##1}}}
\expandafter\def\csname PY@tok@gi\endcsname{\def\PY@tc##1{\textcolor[rgb]{0.00,0.63,0.00}{##1}}}
\expandafter\def\csname PY@tok@gh\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.00,0.00,0.50}{##1}}}
\expandafter\def\csname PY@tok@ni\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.50,0.00,0.00}{##1}}}
\expandafter\def\csname PY@tok@nl\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.56,0.44,0.00}{##1}}}
\expandafter\def\csname PY@tok@nn\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.05,0.52,0.71}{##1}}}
\expandafter\def\csname PY@tok@no\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.00,0.19,0.38}{##1}}}
\expandafter\def\csname PY@tok@na\endcsname{\def\PY@tc##1{\textcolor[rgb]{0.00,0.00,0.75}{##1}}}
\expandafter\def\csname PY@tok@nb\endcsname{\def\PY@tc##1{\textcolor[rgb]{0.00,0.44,0.13}{##1}}}
\expandafter\def\csname PY@tok@nc\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.69,0.00,0.38}{##1}}}
\expandafter\def\csname PY@tok@nd\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.31,0.31,0.31}{##1}}}
\expandafter\def\csname PY@tok@ne\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.94,0.00,0.00}{##1}}}
\expandafter\def\csname PY@tok@nf\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.00,0.38,0.69}{##1}}}
\expandafter\def\csname PY@tok@si\endcsname{\def\PY@bc##1{\setlength{\fboxsep}{0pt}\colorbox[rgb]{0.88,0.88,0.88}{\strut ##1}}}
\expandafter\def\csname PY@tok@s2\endcsname{\def\PY@bc##1{\setlength{\fboxsep}{0pt}\colorbox[rgb]{1.00,0.94,0.94}{\strut ##1}}}
\expandafter\def\csname PY@tok@vi\endcsname{\def\PY@tc##1{\textcolor[rgb]{0.19,0.19,0.69}{##1}}}
\expandafter\def\csname PY@tok@nt\endcsname{\def\PY@tc##1{\textcolor[rgb]{0.00,0.44,0.00}{##1}}}
\expandafter\def\csname PY@tok@nv\endcsname{\def\PY@tc##1{\textcolor[rgb]{0.56,0.38,0.19}{##1}}}
\expandafter\def\csname PY@tok@s1\endcsname{\def\PY@bc##1{\setlength{\fboxsep}{0pt}\colorbox[rgb]{1.00,0.94,0.94}{\strut ##1}}}
\expandafter\def\csname PY@tok@gp\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.78,0.36,0.04}{##1}}}
\expandafter\def\csname PY@tok@sh\endcsname{\def\PY@bc##1{\setlength{\fboxsep}{0pt}\colorbox[rgb]{1.00,0.94,0.94}{\strut ##1}}}
\expandafter\def\csname PY@tok@ow\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.00,0.00,0.00}{##1}}}
\expandafter\def\csname PY@tok@sx\endcsname{\def\PY@tc##1{\textcolor[rgb]{0.82,0.13,0.00}{##1}}\def\PY@bc##1{\setlength{\fboxsep}{0pt}\colorbox[rgb]{1.00,0.94,0.94}{\strut ##1}}}
\expandafter\def\csname PY@tok@bp\endcsname{\def\PY@tc##1{\textcolor[rgb]{0.00,0.44,0.13}{##1}}}
\expandafter\def\csname PY@tok@c1\endcsname{\def\PY@tc##1{\textcolor[rgb]{0.50,0.50,0.50}{##1}}}
\expandafter\def\csname PY@tok@kc\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.00,0.50,0.00}{##1}}}
\expandafter\def\csname PY@tok@c\endcsname{\def\PY@tc##1{\textcolor[rgb]{0.50,0.50,0.50}{##1}}}
\expandafter\def\csname PY@tok@mf\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.38,0.00,0.88}{##1}}}
\expandafter\def\csname PY@tok@err\endcsname{\def\PY@tc##1{\textcolor[rgb]{0.94,0.00,0.00}{##1}}\def\PY@bc##1{\setlength{\fboxsep}{0pt}\colorbox[rgb]{0.94,0.63,0.63}{\strut ##1}}}
\expandafter\def\csname PY@tok@kd\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.00,0.50,0.00}{##1}}}
\expandafter\def\csname PY@tok@ss\endcsname{\def\PY@tc##1{\textcolor[rgb]{0.63,0.38,0.00}{##1}}}
\expandafter\def\csname PY@tok@sr\endcsname{\def\PY@tc##1{\textcolor[rgb]{0.00,0.00,0.00}{##1}}\def\PY@bc##1{\setlength{\fboxsep}{0pt}\colorbox[rgb]{1.00,0.94,1.00}{\strut ##1}}}
\expandafter\def\csname PY@tok@mo\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.25,0.00,0.88}{##1}}}
\expandafter\def\csname PY@tok@mi\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.00,0.00,0.82}{##1}}}
\expandafter\def\csname PY@tok@kn\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.00,0.50,0.00}{##1}}}
\expandafter\def\csname PY@tok@o\endcsname{\def\PY@tc##1{\textcolor[rgb]{0.19,0.19,0.19}{##1}}}
\expandafter\def\csname PY@tok@kr\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.00,0.50,0.00}{##1}}}
\expandafter\def\csname PY@tok@s\endcsname{\def\PY@bc##1{\setlength{\fboxsep}{0pt}\colorbox[rgb]{1.00,0.94,0.94}{\strut ##1}}}
\expandafter\def\csname PY@tok@kp\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.00,0.19,0.50}{##1}}}
\expandafter\def\csname PY@tok@w\endcsname{\def\PY@tc##1{\textcolor[rgb]{0.73,0.73,0.73}{##1}}}
\expandafter\def\csname PY@tok@kt\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.19,0.19,0.56}{##1}}}
\expandafter\def\csname PY@tok@sc\endcsname{\def\PY@tc##1{\textcolor[rgb]{0.00,0.25,0.82}{##1}}}
\expandafter\def\csname PY@tok@sb\endcsname{\def\PY@bc##1{\setlength{\fboxsep}{0pt}\colorbox[rgb]{1.00,0.94,0.94}{\strut ##1}}}
\expandafter\def\csname PY@tok@k\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.00,0.50,0.00}{##1}}}
\expandafter\def\csname PY@tok@se\endcsname{\let\PY@bf=\textbf\def\PY@tc##1{\textcolor[rgb]{0.38,0.38,0.38}{##1}}\def\PY@bc##1{\setlength{\fboxsep}{0pt}\colorbox[rgb]{1.00,0.94,0.94}{\strut ##1}}}
\expandafter\def\csname PY@tok@sd\endcsname{\def\PY@tc##1{\textcolor[rgb]{0.82,0.25,0.13}{##1}}}

\def\PYZbs{\char`\\}
\def\PYZus{\char`\_}
\def\PYZob{\char`\{}
\def\PYZcb{\char`\}}
\def\PYZca{\char`\^}
\def\PYZam{\char`\&}
\def\PYZlt{\char`\<}
\def\PYZgt{\char`\>}
\def\PYZsh{\char`\#}
\def\PYZpc{\char`\%}
\def\PYZdl{\char`\$}
\def\PYZti{\char`\~}
% for compatibility with earlier versions
\def\PYZat{@}
\def\PYZlb{[}
\def\PYZrb{]}
\@addtoreset{section}{part}
\usepackage{tikz}
\usepackage{cancel}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Quicksort Algorithm
\end_layout

\begin_layout Subsection
Quicksort Overview
\end_layout

\begin_layout Itemize
Prevalent in practice
\end_layout

\begin_layout Itemize
\begin_inset Formula $O(n\log n)$
\end_inset

 time 
\begin_inset Quotes eld
\end_inset

on average
\begin_inset Quotes erd
\end_inset

, works in place, minimal extra memory needed
\end_layout

\begin_layout Subsubsection
The Sorting Problem
\end_layout

\begin_layout Standard

\bar under
Input
\bar default
: array of n numbers, unsorted
\end_layout

\begin_layout Standard

\bar under
Ouput
\bar default
: Same numbers, sorted in increasing order
\end_layout

\begin_layout Standard

\bar under
Assume
\bar default
: all array entries distinct
\end_layout

\begin_layout Subsubsection
Partitioning around a pivot
\end_layout

\begin_layout Standard

\bar under
Key idea
\bar default
: partition array around a 
\bar under
pivot element
\end_layout

\begin_layout Itemize
pick element of array
\end_layout

\begin_layout Itemize
rearrange array so that:
\end_layout

\begin_deeper
\begin_layout Itemize
left of pivot 
\begin_inset Formula $\Rightarrow$
\end_inset

less than pivot
\end_layout

\begin_layout Itemize
right of pivot 
\begin_inset Formula $\Rightarrow$
\end_inset

greater than pivot
\end_layout

\end_deeper
\begin_layout Standard
Note: puts pivot in its 
\begin_inset Quotes eld
\end_inset

rightful position
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Subsubsection
Two cool factors about partition
\end_layout

\begin_layout Standard
Linear 
\begin_inset Formula $(O(n))$
\end_inset

 time, no extra memory
\end_layout

\begin_layout Standard
Reduces problem size
\end_layout

\begin_layout Subsubsection
QuickSort: High-Level Description
\end_layout

\begin_layout Standard
[Hoare circa 1961]
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

QuickSort (array A, length n)
\end_layout

\begin_layout Plain Layout

	if n = 1 return
\end_layout

\begin_layout Plain Layout

	p = ChoosePivot(A, n)
\end_layout

\begin_layout Plain Layout

	Partition A around p
\end_layout

\begin_layout Plain Layout

	recursively sort 1st part
\end_layout

\begin_layout Plain Layout

	recursively sort 2nd part
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Partitioning Around a Pivot
\end_layout

\begin_layout Subsubsection
The Easy Way Out
\end_layout

\begin_layout Standard

\bar under
Note
\bar default
: using 
\begin_inset Formula $O(n)$
\end_inset

 extra memory, easy to partition around pivot in 
\begin_inset Formula $O(n)$
\end_inset

 time.
\end_layout

\begin_layout Standard
[3:00]
\end_layout

\begin_layout Subsubsection
In-Place Implementation
\end_layout

\begin_layout Standard

\bar under
Assume
\bar default
: pivot = 1st element of array
\end_layout

\begin_layout Standard
[if not, swap pivot 
\begin_inset Formula $\longleftrightarrow$
\end_inset

1st element as preprocessing step]
\end_layout

\begin_layout Standard

\bar under
High-level Idea
\bar default
: [5:30]
\end_layout

\begin_layout Itemize
single scan through array
\end_layout

\begin_layout Itemize
invariant: everything looked at so far is partitioned
\end_layout

\begin_layout Subsubsection
Partition Example
\end_layout

\begin_layout Standard
[7:20-16:00]
\end_layout

\begin_layout Subsubsection
Pseudocode for Partition
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Partition(A, l, r)
\end_layout

\begin_layout Plain Layout

	p := A[l]	#pivot, first entry in array
\end_layout

\begin_layout Plain Layout

	i := l + 1	# just to right of pivot
\end_layout

\begin_layout Plain Layout

	for j = l + 1 to r
\end_layout

\begin_layout Plain Layout

		if A[j] < p [if A[j] > p, do nothing]
\end_layout

\begin_layout Plain Layout

			swap A[j] and A[i]
\end_layout

\begin_layout Plain Layout

			i := i + 1
\end_layout

\begin_layout Plain Layout

	swap A[l] and A[i-1]
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Running Time
\end_layout

\begin_layout Standard
\begin_inset Formula $O(n)$
\end_inset

, where 
\begin_inset Formula $n=r-l+1$
\end_inset

 is the length of the input (sub)array
\end_layout

\begin_layout Standard

\bar under
Reason
\bar default
: 
\begin_inset Formula $O(1)$
\end_inset

 work per array entry
\end_layout

\begin_layout Standard

\bar under
Also
\bar default
: clearly works in place (repeated swaps)
\end_layout

\begin_layout Subsubsection
Correctness
\end_layout

\begin_layout Standard

\bar under
Claim
\bar default
: the for loop maintains the invariants:
\end_layout

\begin_layout Enumerate
A[l+1], ..., A[i-1] are all less than the pivot
\end_layout

\begin_layout Enumerate
A[i], ..., A[j-1] are all greater than pivot
\end_layout

\begin_layout Standard
Consequence: at end of for loop, have
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathbf{p}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathbf{<p}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $^{(i)}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathbf{>p}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $^{(j)}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
after final swap, array partitioned around pivot.
\end_layout

\begin_layout Subsection
Choosing a Good Pivot
\end_layout

\begin_layout Subsubsection
The Importance of the Pivot
\end_layout

\begin_layout Standard
Q: Running time of QuickSort?
\end_layout

\begin_layout Standard
A: Depends on the 
\bar under
quality of the pivot
\bar default
.
\end_layout

\begin_layout Standard
The running time of QuickSort on an already sorted array if the pivot is
 always the first element is 
\begin_inset Formula $O(n^{2})$
\end_inset

.
\end_layout

\begin_layout Standard
Reason: unbalanced split
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathbf{<p}$
\end_inset

 {empty}
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\begin_inset Formula $p$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathbf{>p}$
\end_inset

{length n-1 (still sorted), recurse on these}
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Running time: 
\begin_inset Formula $\ge n+(n-1)+(n-2)+\dots+1=O(n^{2})$
\end_inset


\end_layout

\begin_layout Standard
Suppose we run QuickSort on some input, and, magically, every recursive
 call chooses the median element of its subarray as its pivot, the running
 time in this case is 
\begin_inset Formula $\Theta(n\log n)$
\end_inset

.
\end_layout

\begin_layout Standard
Reason: let 
\begin_inset Formula $T(n)$
\end_inset

 = running time on arrays of size n
\end_layout

\begin_layout Standard
Then: 
\begin_inset Formula $T(n)\le2T(\frac{n}{2})+\Theta(n)$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\frac{n}{2}$
\end_inset

 because pivot = median
\end_layout

\begin_layout Standard
\begin_inset Formula $\Theta(n)$
\end_inset

 choose pivot, partition
\end_layout

\begin_layout Standard
\begin_inset Formula $\Rightarrow T(n)=\Theta(n\log n)$
\end_inset


\end_layout

\begin_layout Subsubsection
Random Pivots
\end_layout

\begin_layout Standard

\bar under
Key question
\bar default
: how to choose pivots?
\end_layout

\begin_layout Standard

\bar under
Big Idea
\bar default
: Random Pivots
\end_layout

\begin_layout Standard
That is: every recursive call, choose the pivot randomly (each element equally
 likely)
\end_layout

\begin_layout Standard

\bar under
Hope
\bar default
: a random pivot is 
\begin_inset Quotes eld
\end_inset

pretty good
\begin_inset Quotes erd
\end_inset

 
\begin_inset Quotes eld
\end_inset

often enough
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard

\bar under
Intuition
\bar default
: 
\end_layout

\begin_layout Enumerate
If always get a 25-75 split, good enough for 
\begin_inset Formula $O(n\log n)$
\end_inset

 running time.
 [non-trivial exercise: prove via recursion tree]
\end_layout

\begin_layout Enumerate
Half of elements give a 25-75 split or better
\end_layout

\begin_layout Standard
Does this really work?
\end_layout

\begin_layout Subsubsection
Average Running Time of QuickSort
\end_layout

\begin_layout Standard
QuickSort Theorem: for every input array of length n, the average running
 time of QuickSort (with random pivots) is 
\begin_inset Formula $O(n\log n)$
\end_inset

.
\end_layout

\begin_layout Standard

\bar under
Note
\bar default
: holds for every input [no assumptions on the data]
\end_layout

\begin_layout Standard
\begin_inset Quotes eld
\end_inset

Average
\begin_inset Quotes erd
\end_inset

 is over random choices made by the algorithm.
\end_layout

\end_body
\end_document
